version: '3.5'

services:
  db:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=1qaz1QAZ
      - MYSQL_USER=agtms
      - MYSQL_PASSWORD=1qaz1QAZ
      - MYSQL_DATABASE=agtms
    networks: 
      back:
        aliases:
          - dbserver
    volumes:
      - dbdata:/var/lib/mysql
    deploy:
      mode: replicated
      replicas: 1
      labels:
        "name": "DB"
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints: [node.role == manager]
  redis:
    image: redis:5.0-alpine
    command: redis-server --requirepass 1qaz1QAZ --appendonly yes
    networks: 
      back:
        aliases:
          - redisserver
    volumes:
      - redisdata:/data
    deploy:
      mode: replicated
      replicas: 1
      labels:
        "name": "REDIS"
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints: [node.role == manager]
  mongodb:
    image: bitnami/mongodb:3.6
    environment:
      - MONGODB_ROOT_PASSWORD=root
      - MONGODB_USERNAME=agtms
      - MONGODB_PASSWORD=1qaz1QAZ
      - MONGODB_DATABASE=agtms
    networks: 
      back:
        aliases:
          - mongodbserver
    volumes:
      - mongodbdata:/bitnami/mongodb/data
    depends_on:
      - fix-mongodb-permissions
    deploy:
      mode: replicated
      replicas: 1
      labels:
        "name": "mongodb"
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints: [node.role == manager]
  fix-mongodb-permissions:
    image: busybox
    user: root
    command: chown -R 1001:1001 /bitnami
    volumes:
    - mongodbdata:/bitnami
  agtms-eureka:
    image: agtms/agtms-eureka:${REVISION}
    environment:
      - JAVA_OPTS=-Xms512m -Xmx512m -Xmn192m -Xss256k
    ports:
      - 7890:7890
    networks: 
      back:
        aliases:
          - eurekaserver
    deploy:
      mode: replicated
      replicas: 1
      labels:
        "name": "eureka"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
          limits:
            memory: 1G
  agtms-zuul:
    image: agtms/agtms-zuul:${REVISION}
    environment:
      - JAVA_OPTS=-Xms512m -Xmx512m -Xmn192m -Xss256k
    networks: 
      front:
        aliases:
          - zuulserver
      back:
    deploy:
      mode: replicated
      replicas: 1
      labels:
        "name": "zuul"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
          limits:
            memory: 1G
  agtms-web:
    image: agtms/agtms-web:${REVISION}
    environment:
      - JAVA_OPTS=-Xms1g -Xmx1g -Xmn384m -Xss256k -Dloader.path=/libs
    networks: 
      back:
    volumes:
      - ${WEB_CONFIG_HOME}:/config
      - ${WEB_LIBS_HOME}:/libs
      - ${WEB_FILES_HOME}:/tmp/files
    entrypoint: ./waiting.sh -d dbserver:3306,redisserver:6379,mongodbserver:27017 -c 'java -Xms1g -Xmx1g -Xmn384m -Xss256k -Dloader.path=/libs -Djava.security.egd=file:/dev/./urandom -jar agtms-web.jar'
    deploy:
      mode: replicated
      replicas: 1
      labels:
        "name": "web"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
          limits:
            memory: 2G
  agtms-vue:
    image: agtms/agtms-vue:${REVISION}
    ports:
      - 8080:80
    networks: 
      front:
    volumes:
      - ${WEB_CONFIG_HOME}/nginx.conf:/etc/nginx/nginx.conf
    entrypoint: /app/waiting.sh -d zuulserver -c 'nginx -g "daemon off;"'
    deploy:
      mode: global
      labels:
        "name": "vue"
      restart_policy:
        condition: on-failure
        max_attempts: 3

networks: 
  front:
  back:

volumes:
  dbdata:
  redisdata:
  mongodbdata: